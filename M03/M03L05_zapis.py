### ğŸ”´ Jak zapisaÄ‡ plik?

content = 'ten tekst chcemy umieÅ›ciÄ‡ w pliku'
writer = open('nowy.txt', 'w')  # jeÅ›li plik istnieje, to zostanie nadpisany!!!
writer.write(content)  # uwaga - write w przeciwieÅ„stwie do print'a nie dodaje znaku nowej linii!
writer.write('moÅ¼esz zapisaÄ‡ wiÄ™cej tekstu\n')
writer.write('to bÄ™dzie w kolejne linii dziÄ™ki \\n')
writer.close()
# po zamkniÄ™ciu strumienia mamy juÅ¼ gwarancjÄ™, Å¼e wszystko dotarÅ‚o na dysk
print(':-) Sukces')

# A jak to zrobiÄ‡ z with'em?

content = 'ten tekst chcemy umieÅ›ciÄ‡ w pliku'
with open('nowy2.txt', 'w') as writer:
    writer.write(content)
    writer.write('moÅ¼esz zapisaÄ‡ wiÄ™cej tekstu\n')
    writer.write('to bÄ™dzie w kolejne linii dziÄ™ki \\n')
    # implicit writer.close() - daje nam to gwarancjÄ™, Å¼e faktycznie zmiany dotrÄ… na dysk
print(':-) Sukces')    

### ğŸ”´ Ä†wiczenie

# 1. RozwiÅ„ program z poprzedniego Ä‡wiczenia tak, aby zapisaÄ‡ zanonimizowany tekst do nowego wyjÅ›ciowego pliku. 
# 2. PoproÅ› uÅ¼ytkownika zarÃ³wno o nazwÄ™ pliku wejÅ›ciowego (tego, ktÃ³ry mamy odczytaÄ‡, np. plik.txt), jak i wyjÅ›ciowego (tego, do ktÃ³rego mamy zapisaÄ‡). 
# 3. JeÅ¼eli uÅ¼ytkownik nie poda nazwy pliku wyjÅ›ciowego, wÃ³wczas wypisz zanominimizowany tekst funkcjÄ… print.
# 4. JeÅ¼eli plik wyjÅ›ciowy juÅ¼ istnieje, to go nie nadpisuj. W tym celu trzeba wykorzystaÄ‡ funkcjÄ™ open w inny sposÃ³b. Jak? ZnajdÅº w dokumentacji tej funkcji!