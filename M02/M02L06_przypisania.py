
# ğŸ‘‰ Obiekty to rzeczy leÅ¼Ä…ce na stole - zalaminowane kartki, dÅ‚ugopisy, pudeÅ‚ka czy... koty. 
# ğŸ‘‰ Z kolei zmienne to karteczki samoprzylepne, ktÃ³re naklejasz na te obiekty.
# ğŸ‘‰ W poniÅ¼szym przykÅ‚adzie na stole leÅ¼y JEDEN kot, a na nim naklejone sÄ… dwie karteczki samoprzylepne, na ktÃ³rych jest napisane mruczek oraz filemon.
# ğŸ‘‰ Zmienne NIE sÄ… obiektami - zmienne wskazujÄ… na obiekty.
mruczek = "kot"
filemon = mruczek

# Tak, mruczek i filemon to jeden i ten sam obiekt. To po prostu dwie rÃ³Å¼ne nazwy na ten sam obiekt.
print(mruczek)
print(filemon)
print(id(mruczek))  # id(x) zwraca adres w pamiÄ™ci, gdzie przechowywany jest dany obiekt. Jest to liczba reprezentujÄ…ca poÅ‚oÅ¼enie na naszym stole.
print(id(filemon))
# id mruczka i filemona jest dokÅ‚adnie takie samo. Innymi sÅ‚owy, oba obiekty leÅ¼Ä… w tym samym miejscu na stole. WiÄ™c to musi byÄ‡ ten sam obiekt!

# Czy to znaczy, Å¼e jeÅ›li urwÄ™ nogÄ™ filemonowi, to mruczek rÃ³wnieÅ¼ bÄ™dzie mieÄ‡ urwanÄ… nogÄ™???
# Na szczÄ™Å›cie nie - obiekty typu str, int oraz float sÄ… NIEMUTOWALNE (= niemodyfikowalne) - raz stworzone na zawsze pozostanÄ… takie same.
mruczek[0] = "a"  # ==> TypeError: 'str' object does not support item assignment

# MoÅ¼na co najwyÅ¼ej stworzyÄ‡ nowego stringa na podstawie istniejÄ…cego.

### ğŸ”´ Ä†wiczenie: Popraw kod

currency = "usd"
currency.upper()
print("Waluta wielkimi literami:", currency)