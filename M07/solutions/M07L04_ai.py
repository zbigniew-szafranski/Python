### ðŸ”´ Ä†wiczenie: System numerowania zdjÄ™Ä‡ w aparacie

# WyobraÅº sobie, Å¼e tworzysz oprogramowanie dla aparatu fotograficznego.
# Aparat zapisuje zdjÄ™cia w formacie "IMG_XXXX.jpg", gdzie XXXX to czterocyfrowy numer zdjÄ™cia
# (np. "IMG_0001.jpg", "IMG_0002.jpg" itd.)
# 
# Napisz funkcjÄ™ generate_photo_name(existing_photos: list[str]) -> str, ktÃ³ra:
# 1. Otrzymuje listÄ™ nazw juÅ¼ istniejÄ…cych zdjÄ™Ä‡
# 2. Zwraca nazwÄ™ dla nowego zdjÄ™cia w odpowiednim formacie
# 3. Numer musi byÄ‡ zawsze 4-cyfrowy (uzupeÅ‚niony zerami z przodu)
# 4. NaleÅ¼y uÅ¼yÄ‡ pierwszego wolnego numeru
#
# PrzykÅ‚ady:
# - Dla pustej listy â†’ "IMG_0001.jpg"
# - Dla ["IMG_0001.jpg"] â†’ "IMG_0002.jpg"
# - Dla ["IMG_0001.jpg", "IMG_0002.jpg", "IMG_0004.jpg"] â†’ "IMG_0003.jpg"
#
# Dodatkowo:
# - Napisz testy sprawdzajÄ…ce rÃ³Å¼ne przypadki
# - Co siÄ™ stanie gdy numery siÄ™ wyczerpiÄ… (> 9999)?

def generate_photo_name(existing_photos: list[str]) -> str:
    if not existing_photos:
        return "IMG_0001.jpg"
        
    # Tworzymy zbiÃ³r istniejÄ…cych numerÃ³w
    existing_numbers = set()
    for photo in existing_photos:
        number = int(photo.split('_')[-1].split('.')[0])
        existing_numbers.add(number)
    
    # Znajdujemy pierwszy wolny numer
    new_number = 1
    while new_number in existing_numbers:
        new_number += 1
        
    # Sprawdzamy przekroczenie zakresu
    if new_number > 9999:
        raise ValueError("Przekroczono maksymalny numer zdjÄ™cia (9999)")
        
    return f"IMG_{new_number:04d}.jpg"
print(generate_photo_name(["IMG_0001.jpg", "IMG_0002.jpg", "IMG_0004.jpg"]))
