### ğŸ”´ Docstringi

# W Pythonie stringi moÅ¼na tworzyÄ‡ na co najmniej dwa sposoby:

casual_string = "To musi byÄ‡ w jednej linii"

multiline_string = """
Ten string
MoÅ¼e zawieraÄ‡
wiele linii!
"""

# Jak w praktyce wykorzystuje siÄ™ tÄ™ drugÄ… opcjÄ™? Do pisania DOKUMENTACJI.

# Jak najwiÄ™cej informacji staramy siÄ™ zawrzeÄ‡ w kodzie, w szczegÃ³lnoÅ›ci w nazwach zmiennych czy funkcji.
# Jednak pewnych informacji nie da siÄ™ tak zawrzeÄ‡ - dobrze jest je wtedy spisaÄ‡ w tzw. dokumentacji.
# W Pythonie uÅ¼ywamy do tego tzw. docstringa, czyli stringa znajdujÄ…cego siÄ™ na samym poczÄ…tku moduÅ‚u, funkcji lub klasy, tak jak poniÅ¼ej:

def add(a, b, c, force_conversion=False):
    """Add three numbers.
    
    force_conversion -- forces conversion to float (useful if some numbers may be strings).
    
    """
    
    if force_conversion:
        a = float(a)
        b = float(b)
        c = float(c)
    return a + b + c

# Tak napisana dokumentacja jest rozpoznawana przez Pythona i przez narzÄ™dzia.

print(add.__doc__)  # Funkcje (jak i klasy i moduÅ‚y) majÄ… specjalny atrybut __doc__ przechowujÄ…ce opis.

# DokumentacjÄ™ caÅ‚ego moduÅ‚u umieszczamy na poczÄ…tku caÅ‚ego skryptu, jeszcze przed importami.

### ğŸ”´ Ä†wiczenie

# W poprzednim Ä‡wiczeniu dodaj docstring dokumentujÄ…cy caÅ‚y program oraz funkcjÄ™ print_raport. Jakie informacje umieÅ›cisz w dokumentacji?