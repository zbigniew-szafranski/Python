### ğŸ”´ WiÄ™cej o wyraÅ¼eniach listowych

# Znasz juÅ¼ wyraÅ¼enia listowe. PoniÅ¼szy kod:

phones = ['+48123456789', '+4800000000', '+49123456789']
countries = []
for phone in phones:
    country = phone[:3]
    countries.append(country)
print('countries =', countries)  # ==> countries = ['+48', '+48', '+49']

# MoÅ¼esz zastÄ…piÄ‡ znacznie krÃ³tszym:

countries = [phone[:3] for phone in phones]
print('countries =', countries)  # ==> countries = ['+48', '+48', '+49']

# Jednak co, gdy dodatkowo chcesz pozbyÄ‡ siÄ™ czÄ™Å›ci elementÃ³w? Co z poniÅ¼szym kodem?

phones = ['+48123456789', '+4800000000', '+49123456789']
polish_numbers = []
for phone in phones:
    if phone[:3] == "+48":
        short_phone = phone[3:]
        polish_numbers.append(short_phone)
print('polish_numbers =', polish_numbers)  # ==> polish_numbers = ['123456789', '00000000']

# Ten kod rÃ³wnieÅ¼ moÅ¼na przepisaÄ‡, uÅ¼ywajÄ…c nieco bardziej rozbudowanej wersji list comprehension, skÅ‚adni [_ for _ in _ if _]

polish_numbers = [phone[3:] for phone in phones if phone[:3] == "+48"]
print('polish_numbers =', polish_numbers)  # ==> polish_numbers = ['123456789', '00000000']

### ğŸ”´ Ä†wiczenie

# MajÄ…c podanÄ… listÄ™ plikÃ³w znajdÅº tylko te, ktÃ³re majÄ… rozszerzenie ".txt".

# Uwaga - zakÅ‚adamy, Å¼e mamy juÅ¼ pewnÄ… listÄ™ plikÃ³w, wiÄ™c nie moÅ¼emy uÅ¼yÄ‡ funkcji glob.glob.

# Rozszerzenie pliku moÅ¼esz sprawdziÄ‡ znacznie szybciej, niÅ¼ robiliÅ›my to do tej pory. W koÅ„cu wystarczy sprawdziÄ‡, czy napis koÅ„czy siÄ™ na ".txt". Jak to zrobisz? Poszukaj. :)

# Napisz testy!

files = ['pierwszy.txt', 'drugi.txt', 'ten powinien byÄ‡ usuniÄ™ty.zip']